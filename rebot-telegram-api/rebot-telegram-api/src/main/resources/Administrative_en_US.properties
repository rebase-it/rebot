# disable command
disable.command.disabled=%s disabled
disable.command.already.disabled=%s already disabled.
disable.command.not.allowed=You may not have permissions to disable this bot
disable.command.help=%s - Disable the bot, none message will be processed while disabled.
disable.command.description=disable the bot


# dump command
dump.command.append.help=help - shows the bot help
dump.command.help=%s - generate a output with the telegram's pattern to edit the Bot commands. it will return \n COMMAND - DESCRIPTION
dump.command.description=dump the available commands in the Telegram's commands pattern


# enable command
enable.command.enabled=%s enabled.
enable.command.already.enabled=%s already enabled.
enable.command.not.allowed=You may not have permissions to enable this bot
enable.command.help=%s - Enables the bot, all messages will be processed.
enable.command.description=enable the bot


# id command
id.command.description=returns the user and chat ID


# locale command
locale.command.description=set the global locale for the given chat group
locale.command.help=Configure a global locale for the given chat group, example: \
  \n %s en_us \
  \n %s pt_br \
  \n %s - return the current locale for the given group
locale.command.not.allowed=You may not have permissions to change the locale configuration for this this group
locale.current.definition=The locale definition for <b>%s</b> group is: <code>%s</code>
locale.definition.not.valid=The definition <b>%s</b> is not valid. \
  \n Supported values: <code>%s</code>


# internal
internal.help.response=\n&#60;command&#62; help: returns the command's help.